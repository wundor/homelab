---
{{ ansible_managed | comment }}
version: '{{ compose_version }}'
services:
  {{ service }}:
    image: traefik:{{ version }}
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    environment:
      - CLOUDFLARE_EMAIL=cloudflare@testchamber.one
      - CLOUDFLARE_API_KEY={{ cf_api_token }}
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: {{ service_path }}/config.yml
        target: /config.yml
        read_only: true
      {{ volume_nocopy }}
        source: {{ service }}_config
        target: /certificates
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
    command:
      - --log.level=INFO
      - --api
      - --ping=true
      - --metrics.prometheus=true
      - --accesslog
      - --providers.docker
      - --serversTransport.insecureSkipVerify=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/config.yml
      - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
        # certs
      - --certificatesresolvers.wild.acme.email=le@testchamber.one
      - --certificatesresolvers.wild.acme.storage=/certificates/acme.json
      - --certificatesresolvers.wild.acme.dnschallenge=true
      - --certificatesresolvers.wild.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.wild.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.wild.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    deploy:
      {{ placement }}
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network={{ traefik_network }}'
          # redirect http -> https
        - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)'
        - 'traefik.http.routers.http-catchall.entrypoints=http'
        - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
        - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
          # wildcard
        - 'traefik.http.routers.wildcard-certs.tls.certresolver=wild'
        - 'traefik.http.routers.wildcard-certs.tls.domains[0].main=testchamber.one'
        - 'traefik.http.routers.wildcard-certs.tls.domains[0].sans=*.testchamber.one, *.lan.testchamber.one'
        - 'traefik.http.routers.wildcard-certs.tls.domains[1].main=rpgbasement.xyz'
        - 'traefik.http.routers.wildcard-certs.tls.domains[1].sans=*.rpgbasement.xyz'
        - 'traefik.http.routers.wildcard-certs.tls.domains[2].main=rss-my-ass.ga'
        - 'traefik.http.routers.wildcard-certs.tls.domains[2].sans=*.rss-my-ass.ga'
          # dashboard
        - 'traefik.http.routers.{{ service }}.rule=Host(`{{ dns.fe }}`)'
        - 'traefik.http.routers.{{ service }}.tls=true'
        - 'traefik.http.routers.{{ service }}.entrypoints=https'
        - 'traefik.http.routers.{{ service }}.service=api@internal'
        - 'traefik.http.routers.{{ service }}.middlewares=authelia@docker'
        - 'traefik.http.services.{{ service }}.loadbalancer.server.port=8080'
    networks:
      - {{ traefik_network }}

volumes:
  {{ service }}_config:
    {{ nfs_volume }}
      device: ':/{{ zfs_pool }}/{{ service }}'

networks:
  {{ traefik_network }}:
    external: true
